<Project Sdk="Microsoft.NET.Sdk.Razor">
  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
    <StaticWebAssetBasePath>/</StaticWebAssetBasePath>
    <!-- Generate XML documentation for NuGet consumers -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <!-- Suppress missing XML docs warnings to keep builds clean while shipping docs -->
    <NoWarn>$(NoWarn);1591</NoWarn>
    <BuildClientOnPack>true</BuildClientOnPack>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Tollervey.Umbraco.LightningPayments</PackageId>
    <Product>Tollervey.Umbraco.LightningPayments</Product>
    <Title>Tollervey.Umbraco.LightningPayments</Title>
    <!-- NuGet package metadata -->
    <Authors>Tollervey</Authors>
    <Company>Tollervey</Company>
    <Description>Umbraco Lightning payments and paywall integration powered by Breez. Includes API endpoints, middleware, SSE realtime updates, and client assets.</Description>
    <PackageTags>Umbraco;Payments;Lightning;Breez;Paywall;SSE;Webhook</PackageTags>
    <PackageProjectUrl>https://github.com/Tollervey/umbraco-breez-monetization</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Tollervey/umbraco-breez-monetization</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <!-- Symbols and deterministic builds -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>portable</DebugType>
    <Deterministic>true</Deterministic>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Breez.Sdk.Liquid" Version="0.11.7" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.23.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.10" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.10" PrivateAssets="All" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="9.0.10" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="9.0.10" />
    <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="9.0.10" PrivateAssets="All" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.14.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions" Version="9.0.10" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.10" />
    <PackageReference Include="OpenTelemetry.Api" Version="1.13.1" />
    <PackageReference Include="Polly" Version="8.6.4" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="8.1.1" />
    <PackageReference Include="Umbraco.Cms.Web.Website" Version="[16.1.0,17.0.0)" />
    <PackageReference Include="Umbraco.Cms.Web.Common" Version="[16.1.0,17.0.0)" />
    <PackageReference Include="Umbraco.Cms.Api.Common" Version="[16.1.0,17.0.0)" />
    <PackageReference Include="Umbraco.Cms.Api.Management" Version="[16.1.0,17.0.0)" />
    <PackageReference Include="MailKit" Version="4.11.0" />
    <!-- SourceLink for GitHub (private so it doesn't flow to consumers) -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <ClientAssetsInputs Include="Client\**" Exclude="$(DefaultItemExcludes)" />

    <!-- Dont include the client folder as part of packaging nuget build -->
    <Content Remove="Client\**" />
    <Content Include="Client\src\tsconfig.node.json" />
    <Content Include="Client\tsconfig.json" />

    <!-- However make the Umbraco-package.json included for dotnet pack or nuget package and visible to the solution -->
    <Content Include="Client\public\umbraco-package.json" Pack="true" PackagePath="App_Plugins\Tollervey.Umbraco.LightningPayments" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Migrations\" />
  </ItemGroup>

  <Target Name="DetectNodeTools" Condition="'$(BuildClientOnPack)' == 'true'" BeforeTargets="Pack">
    <Exec Command="node --version" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="NodeExitCode" />
    </Exec>
    <Exec Command="npm --version" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="NpmExitCode" />
    </Exec>
    <PropertyGroup>
      <NodeFound Condition="'$(NodeExitCode)' == '0'">true</NodeFound>
      <NpmFound Condition="'$(NpmExitCode)' == '0'">true</NpmFound>
    </PropertyGroup>
    <Error Condition="'$(NodeFound)' != 'true'" Text="Node.js is required to build client assets. Install Node.js or set BuildClientOnPack=false to skip building client assets during packing." />
    <Error Condition="'$(NpmFound)' != 'true'" Text="npm is required to build client assets. Install npm (comes with Node.js) or set BuildClientOnPack=false to skip building client assets during packing." />
  </Target>

  <Target Name="RestoreClient" Inputs="Client\package.json;Client\package-lock.json" Outputs="Client\node_modules\.package-lock.json" DependsOnTargets="DetectNodeTools" Condition="'$(BuildClientOnPack)' == 'true' and Exists('Client\package.json')" BeforeTargets="Pack">
    <Message Importance="high" Text="Restoring Client NPM packages (npm ci)..." />
    <Exec Command="npm ci" WorkingDirectory="Client" />
  </Target>

  <Target Name="BuildClient" DependsOnTargets="RestoreClient" Inputs="@(ClientAssetsInputs)" Outputs="$(IntermediateOutputPath)client.complete.txt" Condition="'$(BuildClientOnPack)' == 'true' and Exists('Client\package.json')" BeforeTargets="Pack">
    <Message Importance="high" Text="Executing Client NPM build script..." />
    <Exec Command="npm run build" WorkingDirectory="Client" />
    <ItemGroup>
      <_ClientAssetsBuildOutput Include="wwwroot\App_Plugins\**" />
    </ItemGroup>
    <WriteLinesToFile File="$(IntermediateOutputPath)client.complete.txt" Lines="@(_ClientAssetsBuildOutput)" Overwrite="true" />
  </Target>

</Project>
